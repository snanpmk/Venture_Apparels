<style>
  body {
    font-family: Arial, sans-serif;
    background-color: #f8f9fa;
  }
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
    overflow: auto; /* Clear the float */
    display: flex;
    flex-wrap: wrap;
  }
  .coupon-card,
  .add-coupon-card {
    background-color: white;
    border-radius: 10px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    padding: 20px;
    margin: 0 20px 20px 0;
    width: calc(33.33% - 20px); /* Adjust for margins */
  }
  .add-coupon-card {
    background-color: #0c1927;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
  }
  .plus-icon {
    font-size: 50px;
    margin-right: 10px;
  }
  .coupon-image {
    width: 100%;
    height: auto;
    border-radius: 5px;
  }
  .coupon-title {
    font-weight: bold;
    margin-top: 10px;
  }
  .coupon-description {
    color: #666;
    margin-top: 5px;
  }

  /* Responsive styles */
  @media screen and (max-width: 768px) {
    .coupon-card,
    .add-coupon-card {
      width: calc(50% - 20px);
    }
  }
  @media screen and (max-width: 480px) {
    .coupon-card,
    .add-coupon-card {
      width: 100%;
    }
  }

  .modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(19, 19, 19, 0.696);
    justify-content: center;
    align-items: center;
  }

  .modal-content {
    background-color: rgb(255, 255, 255);

    padding: 20px;
    border-radius: 8px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
    max-width: 400px; /* Set a maximum width */
    width: 80%; /* Adjust the width as needed */
  }

  /* Additional styles for the form */
  form {
    margin-top: 10px;
  }

  label {
    font-weight: bold;
  }

  input[type="text"],
  input[type="number"],
  input[type="date"],
  textarea {
    width: 100%;
    padding: 8px;
    margin-top: 5px;
    border: 1px solid #ccc;
    border-radius: 4px;
  }

  input[type="submit"] {
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    padding: 10px 20px;
    cursor: pointer;
  }
  .addcoupontxt {
    color: #fff;
  }

  .choose-file {
    background-color: #0c1927;
  }

  input[type="submit"]:hover {
    background-color: #0056b3;
  }

  .file-input-container {
    position: relative;
    display: inline-block;
  }

  .custom-file-button {
    display: inline-block;
    padding: 8px 20px;
    background-color: #041624;
    color: white;
    cursor: pointer;
    border: none;
    border-radius: 2rem;
    font-weight: 400;
  }

  .coupon-url {
    display: inline-block;
    width: 100%;
    white-space: normal;
    overflow: overlay;
    text-overflow: inherit;
  }
  /* Hide the default file input */
  input[type="file"] {
    position: absolute;
    left: 0;
    top: 0;
    opacity: 0;
    cursor: pointer;
    width: 100%;
    height: 100%;
  }
  .error-message {
    margin-top: 10px;
    color: red;
  }
  .deletediv {
    align-items: end;
    display: grid;
  }

  
  .btn.replace-button:hover{
    color: black;
  }
</style>

  
<div class="container">
  <div class="add-coupon-card" id="addCouponsBtn">
    <span class="plus-icon">+</span>
    <span><h3 class="addcoupontxt">Add Coupons</h3></span>
  </div>
  <% coupons.forEach(coupon => { %>
  <div class="coupon-card">
    <h3 class="coupon-title" style="text-transform: uppercase">
      <%= coupon.couponCode %>
    </h3>
    <div class="d-flex" style="flex-direction: column">
      <div>
        <p class="coupon-url">
          Minimum amount to be spend : <%= coupon.minimumSpend %>
        </p>
        <p class="coupon-url">
          Maximum amount can be spend : <%= coupon.maxSpend %>
        </p>
        <p class="coupon-description">Discount : <%= coupon.discount %></p>
        <p class="coupon-description">
          Expiry Date : <%= coupon.expiryDate.toLocaleString() %>
        </p>
      </div>
      <div class="deletediv d-flex" style="justify-content: space-between">
        <% if (!coupon.isBlocked) { %>
        <button
          class="btn replace-button block-button"
          style="color: #0056b3;"
          data-coupon-id="<%= coupon.id %>"
        >
          Block
        </button>
        <% } else { %>
            <a
          class="btn replace-button unblock-button"
          style="color: #0056b3;"
          data-coupon-id="<%= coupon.id %>"
          href="/admin/unblock-coupon/<%= coupon.id %>"
          
        >
          Unblock
        </a>
        <% } %>

        <button
          class="btn replace-button delete-button"
          style="color: red;"
          data-coupon-id="<%= coupon.id %>"
        >
          Delete
        </button>
      </div>
    </div>
  </div>
  <% }); %>
</div>

<!-- Add Coupon Modal -->
<div id="addCouponModal" class="modal">
  <div class="modal-content">
    <span class="close" id="closeModal">&times;</span>
    <h2>Add Coupon</h2>
    <form method="POST" action="/admin/add-coupon" id="couponForm">

      <div class="form-group">
        <label for="couponCode">Coupon Code:</label>
        <input type="text" id="couponCode" name="couponCode" placeholder="BLOCK LETTERS ONLY" required />
        <p class="error-message" id="couponCodeError"></p>
      </div>

      <div class="form-group">
        <label for="minimumSpend">Minimum amount to be spent:</label>
        <input type="number" id="minimumSpend" name="minimumSpend" placeholder="in Rupees" required />
        <p class="error-message" id="minimumSpendError"></p>
      </div>


      <div class="form-group">
        <label for="maxSpend">Max amount can be spent:</label>
        <input type="number" id="maxSpend" name="maxSpend" placeholder="in Rupees" required />
        <p class="error-message" id="maxSpendError"></p>
      </div>

      <div class="form-group">
        <label for="discount">Discount:</label>
        <input type="number" id="discount" name="discount" placeholder="in Percentage" required />
        <p class="error-message" id="discountError"></p>
      </div>

      <div class="form-group">
        <label for="expiryDate">Expiry Date:</label>
        <input type="date" id="expiryDate" name="expiryDate" required />
        <p class="error-message" id="expiryDateError" style="color: red;"></p>
      </div>

      <input type="submit" value="Add" />
      
    </form>
  </div>
</div>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const couponForm = document.getElementById("couponForm");
    const expiryDateInput = document.getElementById("expiryDate");
    const expiryDateError = document.getElementById("expiryDateError");

    expiryDateInput.addEventListener("input", function () {
      const enteredDate = new Date(this.value);
      const currentDate = new Date();

      if (enteredDate < currentDate) {
        expiryDateError.textContent = "Expiry date must be in the future.";
      } else {
        expiryDateError.textContent = "";
      }
    });

    couponForm.addEventListener("submit", function (event) {
      if (expiryDateError.textContent !== "") {
        event.preventDefault(); // Block form submission if there's an error
      }
    });
  });
</script>



<script>
  document
    // open modal
    .getElementById("addCouponsBtn")
    .addEventListener("click", function () {
      document.getElementById("addCouponModal").style.display = "flex";
    });

  // close modal
  document.getElementById("closeModal").addEventListener("click", function () {
    document.getElementById("addCouponModal").style.display = "none";
  });

  // close modal when clicked outside
  document.addEventListener("click", function (event) {
    const modal = document.getElementById("addCouponModal");
    if (event.target === modal) {
      modal.style.display = "none";
    }
  });
  // Inside the form submission event listener
  document.getElementById("couponForm").addEventListener("submit", function () {
    document.getElementById("addCouponModal").style.display = "none";
  });
</script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
      const deleteButtons = document.querySelectorAll(".delete-button");
  
      deleteButtons.forEach((button) => {
        button.addEventListener("click", () => {
          const couponId = button.getAttribute("data-coupon-id");
  
          // Display SweetAlert confirmation dialog
          Swal.fire({
            title: "Delete Coupon?",
            text: "Are you sure you want to delete this coupon?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Yes, delete it!",
          }).then((result) => {
            if (result.isConfirmed) {
              // User confirmed, send a fetch request to delete the coupon
              fetch(`/admin/delete-coupon/${couponId}`, {
                method: "delete",
                headers: {
                  "Content-Type": "application/json",
                },
              })
                .then((response) => response.json())
                .then((data) => {
                  if (data.success == true) {
                    Swal.fire(
                      "Deleted!",
                      "The coupon has been deleted.",
                      "success"
                    ).then(() => {
                      window.location.reload();
                    });
                  }
                })
                .catch((error) => {
                  console.error("Error:", error);
                });
            }
          });
        });
      });
    });
  </script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
      const blockbuttons = document.querySelectorAll(".block-button");
  
      blockbuttons.forEach((button) => {
        button.addEventListener("click", () => {
          const couponId = button.getAttribute("data-coupon-id");
  
          // Display SweetAlert confirmation dialog
          Swal.fire({
            title: "Block Coupon?",
            text: "Are you sure you want to block this coupon?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Yes, Block it!",
          }).then((result) => {
            if (result.isConfirmed) {
              // User confirmed, send a fetch request to delete the coupon
              fetch(`/admin/block-coupon/${couponId}`, {
                method: "put",
                headers: {
                  "Content-Type": "application/json",
                },
              })
                .then((response) => response.json())
                .then((data) => {
                  if (data.success == true) {
                    Swal.fire(
                      "Blocked!",
                      "The coupon has been blocked.",
                      "success"
                    ).then(() => {
                      window.location.reload();
                    });
                  }
                })
                .catch((error) => {
                  console.error("Error:", error);
                });
            }
          });
        });
      });
    });
  </script>